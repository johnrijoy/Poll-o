{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollcard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { Col, Card, Collapse, ListGroup, Button } from 'react-bootstrap';\nimport { Context } from \"../context/appContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pollcard = props => {\n  _s();\n\n  const poll = props.polldata;\n  const [polldata, setPolldata] = useState(null);\n  const [open, setOpen] = useState(false);\n  const token = useContext(Context).store.token;\n\n  const handleCheckout = pollid => {\n    const data = {\n      \"poll_id\": pollid\n    };\n    const opts = {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      },\n      params: {\n        \"poll_id\": pollid\n      }\n    };\n    axios.get(process.env.REACT_APP_API_SERVER + \"/api/polls/getpoll\", opts).then(resp => {\n      console.log(resp.data);\n      setPolldata(resp.data);\n      setOpen(!open);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"primary\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          onClick: () => setOpen(!open),\n          \"aria-controls\": \"example-collapse-text\",\n          \"aria-expanded\": open,\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 9\n          }, this), useContext(Context).store.isAuthenticated && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            children: \"Check out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              id: \"example-collapse-text\",\n              children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: \"Cras justo odio\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: \"Dapibus ac facilisis in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: \"Morbi leo risus\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: \"Porta ac consectetur ac\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => handleCheckout(poll.id),\n            \"aria-controls\": \"example-collapse-text\",\n            \"aria-expanded\": open,\n            children: \"Check Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"text-muted text-end\",\n          children: \"Poll created on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pollcard, \"hRoX87XR5xSWU4cW0VkcmI3NtN4=\");\n\n_c = Pollcard;\nexport default Pollcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pollcard\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollcard.js"],"names":["React","useState","useContext","axios","Col","Card","Collapse","ListGroup","Button","Context","Pollcard","props","poll","polldata","setPolldata","open","setOpen","token","store","handleCheckout","pollid","data","opts","method","headers","params","get","process","env","REACT_APP_API_SERVER","then","resp","console","log","catch","error","question","isAuthenticated","id"],"mappings":"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","sourcesContent":["import React, { useState,useContext } from 'react';\nimport axios from 'axios';\nimport { Col,Card,Collapse,ListGroup,Button } from 'react-bootstrap';\nimport { Context } from \"../context/appContext\";\n\nconst Pollcard = (props) => {\n  const poll = props.polldata;\n  const [polldata, setPolldata] = useState(null)\n  const [open, setOpen] = useState(false);\n  const token = useContext(Context).store.token\n\n  const handleCheckout = (pollid) =>{\n    const data = {\n      \"poll_id\":pollid\n    }\n    const opts={\n      method: \"GET\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Content-Type\":\"application/json\",\n        \"Authorization\": \"Bearer \"+ token\n      },\n      params: {\"poll_id\":pollid}\n    };\n\n    axios.get(process.env.REACT_APP_API_SERVER + \"/api/polls/getpoll\",\n      opts\n    ).then((resp)=>{\n        console.log(resp.data);\n        setPolldata(resp.data);\n        setOpen(!open);\n      }\n    ).catch((error) =>{\n        console.log(error);\n      }\n    );\n  }\n\n  return (\n    <>\n    <Col>\n    <Card border=\"primary\" className=\"mb-3\" >\n      <Card.Body\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n\n      >\n        <Card.Title>{poll.question}</Card.Title>\n        { useContext(Context).store.isAuthenticated &&\n        <Button\n         variant = 'primary'\n        >Check out</Button>\n        }\n\n      <Collapse in={open}>\n        <Card.Text id=\"example-collapse-text\">\n          <ListGroup variant=\"flush\">\n            <ListGroup.Item>Cras justo odio</ListGroup.Item>\n            <ListGroup.Item>Dapibus ac facilisis in</ListGroup.Item>\n            <ListGroup.Item>Morbi leo risus</ListGroup.Item>\n            <ListGroup.Item>Porta ac consectetur ac</ListGroup.Item>\n          </ListGroup>\n        </Card.Text>  \n      </Collapse>\n      <Button\n        onClick={()=>handleCheckout(poll.id)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        Check Out\n      </Button>\n\n      </Card.Body>\n      <Card.Footer className=\"text-muted text-end\">Poll created on</Card.Footer>\n    </Card>\n    </Col>\n    </>\n  );\n};\n\nexport default Pollcard;\n"]},"metadata":{},"sourceType":"module"}