{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollcard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { Col, Card, Collapse, Button } from 'react-bootstrap';\nimport { Context } from \"../context/appContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pollcard = props => {\n  _s();\n\n  const poll = props.polldata;\n  const [open, setOpen] = useState(false);\n\n  const handleCheckOut = () => {\n    const opts = {};\n    axios.get(process.env.REACT_APP_API_SERVER + \"/polls/viewpoll\", {\n      headers: {\n        'Accepts': 'aplication/json'\n      }\n    }).then(resp => {\n      console.log(resp.data);\n      this.setState({\n        polls: resp.data,\n        loading: false\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"primary\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          onClick: () => setOpen(!open),\n          \"aria-controls\": \"example-collapse-text\",\n          \"aria-expanded\": open,\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 9\n          }, this), useContext(Context).store.isAuthenticated && /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"primary\",\n            children: \"Check out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              id: \"example-collapse-text\",\n              children: \"Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setOpen(!open),\n            \"aria-controls\": \"example-collapse-text\",\n            \"aria-expanded\": open,\n            children: \"Check Out\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"text-muted text-end\",\n          children: \"Poll created on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pollcard, \"8qme69/vJluizitHgezch1d/cnM=\");\n\n_c = Pollcard;\nexport default Pollcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pollcard\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollcard.js"],"names":["React","useState","useContext","Col","Card","Collapse","Button","Context","Pollcard","props","poll","polldata","open","setOpen","handleCheckOut","opts","axios","get","process","env","REACT_APP_API_SERVER","headers","then","resp","console","log","data","setState","polls","loading","catch","error","question","store","isAuthenticated"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,UAAzB,QAA2C,OAA3C;AACA,SAASC,GAAT,EAAaC,IAAb,EAAkBC,QAAlB,EAA2BC,MAA3B,QAAyC,iBAAzC;AACA,SAASC,OAAT,QAAwB,uBAAxB;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,IAAI,GAAGD,KAAK,CAACE,QAAnB;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBZ,QAAQ,CAAC,KAAD,CAAhC;;AAEA,QAAMa,cAAc,GAAG,MAAK;AAC1B,UAAMC,IAAI,GAAG,EAAb;AAEAC,IAAAA,KAAK,CAACC,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,oBAAZ,GAAmC,iBAA7C,EACE;AAACC,MAAAA,OAAO,EAAE;AAAC,mBAAW;AAAZ;AAAV,KADF,EAEEC,IAFF,CAEQC,IAAD,IAAQ;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,KAAK,EAAGL,IAAI,CAACG,IAAf;AAAqBG,QAAAA,OAAO,EAAE;AAA9B,OAAd;AACD,KALH,EAMEC,KANF,CAMSC,KAAD,IAAU;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,KARH;AAUD,GAbD;;AAeA,sBACE;AAAA,2BACA,QAAC,GAAD;AAAA,6BACA,QAAC,IAAD;AAAM,QAAA,MAAM,EAAC,SAAb;AAAuB,QAAA,SAAS,EAAC,MAAjC;AAAA,gCACE,QAAC,IAAD,CAAM,IAAN;AACE,UAAA,OAAO,EAAE,MAAMlB,OAAO,CAAC,CAACD,IAAF,CADxB;AAEE,2BAAc,uBAFhB;AAGE,2BAAeA,IAHjB;AAAA,kCAME,QAAC,IAAD,CAAM,KAAN;AAAA,sBAAaF,IAAI,CAACsB;AAAlB;AAAA;AAAA;AAAA;AAAA,kBANF,EAOI9B,UAAU,CAACK,OAAD,CAAV,CAAoB0B,KAApB,CAA0BC,eAA1B,iBACF,QAAC,MAAD;AACC,YAAA,OAAO,EAAG,SADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBARF,eAaA,QAAC,QAAD;AAAU,YAAA,EAAE,EAAEtB,IAAd;AAAA,mCACE,QAAC,IAAD,CAAM,IAAN;AAAW,cAAA,EAAE,EAAC,uBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAbA,eAoBA,QAAC,MAAD;AACE,YAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,CAACD,IAAF,CADxB;AAEE,6BAAc,uBAFhB;AAGE,6BAAeA,IAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eA8BE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,SAAS,EAAC,qBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADF;AAsCD,CAzDD;;GAAMJ,Q;;KAAAA,Q;AA2DN,eAAeA,QAAf","sourcesContent":["import React, { useState,useContext } from 'react';\nimport { Col,Card,Collapse,Button } from 'react-bootstrap';\nimport { Context } from \"../context/appContext\";\n\nconst Pollcard = (props) => {\n  const poll = props.polldata;\n  const [open, setOpen] = useState(false);\n\n  const handleCheckOut = () =>{\n    const opts = {\n    }\n    axios.get(process.env.REACT_APP_API_SERVER + \"/polls/viewpoll\",\n      {headers: {'Accepts': 'aplication/json'}}\n    ).then((resp)=>{\n        console.log(resp.data);\n        this.setState({ polls : resp.data, loading: false });\n      }\n    ).catch((error) =>{\n        console.log(error);\n      }\n    );\n  }\n\n  return (\n    <>\n    <Col>\n    <Card border=\"primary\" className=\"mb-3\" >\n      <Card.Body\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n\n      >\n        <Card.Title>{poll.question}</Card.Title>\n        { useContext(Context).store.isAuthenticated &&\n        <Button\n         variant = 'primary'\n        >Check out</Button>\n        }\n\n      <Collapse in={open}>\n        <Card.Text id=\"example-collapse-text\">\n          Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus\n          terry richardson ad squid. Nihil anim keffiyeh helvetica, craft beer\n          labore wes anderson cred nesciunt sapiente ea proident.\n        </Card.Text>  \n      </Collapse>\n      <Button\n        onClick={() => setOpen(!open)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        Check Out\n      </Button>\n\n      </Card.Body>\n      <Card.Footer className=\"text-muted text-end\">Poll created on</Card.Footer>\n    </Card>\n    </Col>\n    </>\n  );\n};\n\nexport default Pollcard;\n"]},"metadata":{},"sourceType":"module"}