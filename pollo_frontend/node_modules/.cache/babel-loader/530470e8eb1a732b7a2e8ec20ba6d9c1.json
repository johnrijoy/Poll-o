{"ast":null,"code":"import React from 'react';\nimport { ProgressBar } from 'react-bootstrap';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pollstatus = props => {\n  const options = props.poll.polloptions;\n  const votes = props.poll.pollvotes;\n  var totalvotes = 0;\n  var progress = {};\n  Object.entries(votes).map(item => {\n    totalvotes = totalvotes + item[1];\n  });\n  Object.entries(votes).map(item => {\n    progress[item[0]] = item[1] * 100 / totalvotes;\n  });\n  console.log('calcs:', totalvotes, progress);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Pollstatus;\nexport default Pollstatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pollstatus\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollstatus.js"],"names":["React","ProgressBar","Pollstatus","props","options","poll","polloptions","votes","pollvotes","totalvotes","progress","Object","entries","map","item","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,QAEO,iBAFP;;;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAS;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAN,CAAWC,WAA3B;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACE,IAAN,CAAWG,SAAzB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,QAAQ,GAAG,EAAf;AAEAC,EAAAA,MAAM,CAACC,OAAP,CAAeL,KAAf,EAAsBM,GAAtB,CAA2BC,IAAD,IAAQ;AAChCL,IAAAA,UAAU,GAAGA,UAAU,GAAGK,IAAI,CAAC,CAAD,CAA9B;AACD,GAFD;AAGAH,EAAAA,MAAM,CAACC,OAAP,CAAeL,KAAf,EAAsBM,GAAtB,CAA2BC,IAAD,IAAQ;AAChCJ,IAAAA,QAAQ,CAACI,IAAI,CAAC,CAAD,CAAL,CAAR,GAAqBA,IAAI,CAAC,CAAD,CAAJ,GAAQ,GAAT,GAAcL,UAAlC;AACD,GAFD;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,UAAtB,EAAkCC,QAAlC;AAEA,sBACE,qCADF;AAKD,CApBD;;KAAMR,U;AAqBN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport {\n  ProgressBar\n} from 'react-bootstrap';\n\nconst Pollstatus = (props)=>{\n  const options = props.poll.polloptions;\n  const votes = props.poll.pollvotes;\n  var totalvotes = 0;\n  var progress = {};\n\n  Object.entries(votes).map((item)=>{\n    totalvotes = totalvotes + item[1]\n  });\n  Object.entries(votes).map((item)=>{\n    progress[item[0]] = (item[1]*100)/totalvotes\n  });\n\n  console.log('calcs:', totalvotes, progress);\n\n  return (\n    <>\n\n    </>\n  )\n}\nexport default Pollstatus;\n"]},"metadata":{},"sourceType":"module"}