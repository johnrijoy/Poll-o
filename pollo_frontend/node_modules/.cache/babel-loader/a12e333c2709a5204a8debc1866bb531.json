{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/pages/Pollpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport { Card, Row, Col, Form } from 'react-bootstrap';\nimport { Layout } from '../layout/Layout';\nimport { Context } from '../context/appContext';\nimport { Pollform, Pollstatus } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pollpage = () => {\n  _s();\n\n  const {\n    poll_id\n  } = useParams();\n  const history = useHistory();\n  const [loading, setLoading] = useState(true);\n  const [changed, setChanged] = useState(false);\n  const [poll, setPoll] = useState(null);\n  const token = useContext(Context).store.token;\n  console.log('poll id received:', poll_id, token);\n  useEffect(() => {\n    const opts = {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      },\n      params: {\n        \"poll_id\": poll_id\n      }\n    };\n    axios.get(process.env.REACT_APP_API_SERVER + \"/api/polls/getpoll\", opts).then(resp => {\n      if (resp.status === 200) {\n        setPoll(resp.data);\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.error(\"error in getpoll:\", error);\n      if (error.response.status === 422 || error.response.status === 401) history.push('/login');\n    });\n  }, [changed, token, poll_id, history]);\n  console.log(poll);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    heading: \"Poll'O\",\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"text-center h2\",\n          body: true,\n          children: poll.polldata.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center\",\n        children: [!poll.polldata.attempted && /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(Pollform, {\n            poll: poll,\n            changed: changed,\n            setchanged: setChanged\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          className: \"col-md-6\",\n          children: /*#__PURE__*/_jsxDEV(Pollstatus, {\n            poll: poll\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        className: \"justify-content-center text-center\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Group, {\n            as: Row,\n            className: \"mb-3 justify-content-center\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              column: true,\n              sm: \"2\",\n              children: \"Share Link\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              sm: \"4\",\n              children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                plaintext: true,\n                readOnly: true,\n                defaultValue: window.location.href\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pollpage, \"Rv+qT4VKOEJgXzeQ4OR8MeA/kJ4=\", false, function () {\n  return [useParams, useHistory];\n});\n\n_c = Pollpage;\nexport default Pollpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pollpage\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/pages/Pollpage.js"],"names":["React","useState","useContext","useEffect","axios","useParams","useHistory","Card","Row","Col","Form","Layout","Context","Pollform","Pollstatus","Pollpage","poll_id","history","loading","setLoading","changed","setChanged","poll","setPoll","token","store","console","log","opts","method","headers","params","get","process","env","REACT_APP_API_SERVER","then","resp","status","data","catch","error","response","push","polldata","question","attempted","window","location","href"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport axios from 'axios';\nimport { useParams, useHistory } from 'react-router-dom';\nimport {\n  Card,\n  Row,\n  Col,\n  Form\n} from 'react-bootstrap';\n\nimport { Layout } from '../layout/Layout';\nimport { Context } from '../context/appContext';\nimport { \n  Pollform,\n  Pollstatus\n} from '../components';\n\nconst Pollpage = () => {\n  const { poll_id } = useParams();\n  const history = useHistory();\n  const [ loading, setLoading ] = useState(true);\n  const [ changed, setChanged ] = useState(false);\n  const [ poll, setPoll ] = useState(null);\n  const token = useContext(Context).store.token;\n  \n  console.log('poll id received:',poll_id, token);\n  \n  useEffect(()=> {\n    \n  const opts = {\n      method: \"GET\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Authorization\": \"Bearer \"+ token\n      },\n      params: {\"poll_id\":poll_id}\n  }\n  axios.get(process.env.REACT_APP_API_SERVER+\"/api/polls/getpoll\", opts)\n    .then((resp)=>{\n      if (resp.status === 200){\n      setPoll(resp.data);\n      setLoading(false);\n      }\n    }).catch((error)=>{\n      console.error(\"error in getpoll:\", error);\n      if (error.response.status === 422 || error.response.status === 401)\n        history.push('/login');\n    });\n  }, [changed, token, poll_id, history])\n  console.log(poll);\n\n  return (\n    <Layout heading=\"Poll'O\">\n    {loading ? (\n        <>\n        <p>Loading</p>\n        </>\n      ):(\n        <>\n        <Row>\n          <Card className=\"text-center h2\" body>{poll.polldata.question}</Card>\n        </Row>\n        <Row className=\"justify-content-center\">\n        { !poll.polldata.attempted &&\n          <Col className=\"col-md-6\">\n            <Pollform poll = {poll} changed={changed} setchanged={setChanged}/>\n          </Col>\n        }\n        <Col className=\"col-md-6\">\n          <Pollstatus poll = {poll} />\n        </Col>\n        </Row>\n\n        <Row className=\"justify-content-center text-center\">\n        <Col>\n          <Form.Group as={Row} className=\"mb-3 justify-content-center\" >\n            <Form.Label column sm=\"2\">\n               Share Link \n            </Form.Label>\n            <Col sm=\"4\">\n              <Form.Control plaintext readOnly defaultValue={window.location.href} />\n            </Col>\n          </Form.Group>\n        </Col>\n\n        </Row>\n        </>\n      )\n    }\n    </Layout>\n  );\n};\n\nexport default Pollpage;\n"]},"metadata":{},"sourceType":"module"}