{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/CreatePoll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Form, ButtonGroup, InputGroup, Button } from 'react-bootstrap'; // functional component to add and remove options\n// class component for create poll form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreatePoll = props => {\n  _s();\n\n  const [polldata, setPolldata] = useState({\n    question: \"\",\n    options: [\"\", \"\"]\n  });\n  console.log(polldata.question);\n\n  const addOption = () => {\n    const values = polldata;\n\n    if (values.options.length < 10) {\n      values.options.push('');\n    }\n\n    setPolldata(values);\n  };\n\n  const removeOption = () => {\n    const values = polldata;\n\n    if (values.options.length > 2) {\n      values.options.pop();\n    }\n\n    setPolldata(values);\n  };\n\n  const handleChangeInput = (event, i) => {\n    console.log(i);\n    const values = polldata;\n    values.options[i] = event.target.value;\n    setPolldata(values);\n  };\n\n  const handleChangeQuestion = event => {\n    const values = polldata;\n    console.log(polldata);\n    values.question = event.target.value;\n    setPolldata(values);\n  };\n\n  const OptionGroup = props => {\n    const count = props.count;\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: 'Option' + (count + 1),\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          id: 'Option' + (count + 1),\n          children: [\"Option \", count + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"col-sm-10\",\n          type: \"text\",\n          \"aria-describedby\": 'Option' + (count + 1),\n          value: props.value[count],\n          onChange: event => props.handleChangeInput(event, count)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: polldata.question,\n          onChange: e => handleChangeQuestion(e),\n          as: \"textarea\",\n          rows: 2,\n          placeholder: \"Enter Question you want to ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), props.polldata.options.map((option, i) => /*#__PURE__*/_jsxDEV(OptionGroup, {\n        count: i,\n        value: option,\n        handleChangeInput: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          \"aria-label\": \"Basic example\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => addOption(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => removeOption(),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mt-3 text-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreatePoll, \"ptDSvvCR+iFeYFZTXXqp/iyQ0ic=\");\n\n_c = CreatePoll;\nexport default CreatePoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePoll\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/CreatePoll.js"],"names":["React","useState","Row","Col","Form","ButtonGroup","InputGroup","Button","CreatePoll","props","polldata","setPolldata","question","options","console","log","addOption","values","length","push","removeOption","pop","handleChangeInput","event","i","target","value","handleChangeQuestion","OptionGroup","count","e","map","option","onHide"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  ButtonGroup,\n  InputGroup,\n  Button\n} from 'react-bootstrap';\n\n// functional component to add and remove options\n// class component for create poll form\nconst CreatePoll = (props) => {\n  const [polldata, setPolldata] = useState({\n    question: \"\",\n    options: [\"\", \"\"]\n  });  \n  console.log(polldata.question) \n  const addOption = () => {\n      const values = polldata;\n      if (values.options.length < 10){\n        values.options.push('');\n      }\n      setPolldata(values);\n    }\n\n    const removeOption = () => {\n      const values = polldata;\n      if (values.options.length > 2){\n        values.options.pop();\n      }\n      setPolldata(values);\n    }\n\n    const handleChangeInput= (event, i) => {\n      console.log(i);\n      const values = polldata;\n      values.options[i] = event.target.value;\n      setPolldata(values);\n    }\n\n    const handleChangeQuestion = (event)=>{\n      const values = polldata;\n      console.log(polldata);\n      values.question = event.target.value;\n      setPolldata(values);\n    }\n\n  const OptionGroup = (props) => {\n    const count = props.count;\n    return (\n      <Form.Group className=\"mb-3\" controlId={'Option'+(count+1)}>\n      <InputGroup>\n        <InputGroup.Text\n          id = {'Option'+(count+1)}\n        >Option {count+1}</InputGroup.Text>\n        <Form.Control\n          className=\"col-sm-10\"\n          type=\"text\" \n          aria-describedby={'Option'+(count+1)}\n          value={props.value[count]}\n          onChange = {(event)=>(props.handleChangeInput(event, count))}\n        />\n      </InputGroup>\n      </Form.Group>\n    );\n  };\n\n\n  return (\n    <>\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"\">\n        <Form.Label>Question</Form.Label>\n        <Form.Control \n          value={polldata.question}\n          onChange={(e)=>handleChangeQuestion(e)}\n          as=\"textarea\" rows={2} \n          placeholder=\"Enter Question you want to ask\" />\n      </Form.Group>\n      \n      {props.polldata.options.map((option, i) => (\n          <OptionGroup count={i} \n          value = {option}\n          handleChangeInput={handleChangeInput}\n          />\n        )\n      )}\n\n    <Form.Group className=\"mt-3\">\n    <ButtonGroup aria-label=\"Basic example\">\n      <Button variant=\"success\"\n        onClick={()=>addOption()}\n      >Add</Button>\n      <Button variant=\"secondary\"\n        onClick={()=>removeOption()}\n      >Remove</Button>\n    </ButtonGroup>\n    </Form.Group>\n    <hr/>\n    <Form.Group className='mt-3 text-end'>\n      <Button className='m-2' onClick={props.onHide}>Close</Button>\n      <Button className='m-2' variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form.Group>\n    </Form>\n    </>\n  );\n  \n};\n\nexport default CreatePoll;\n"]},"metadata":{},"sourceType":"module"}