{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/CreatePoll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Form, ButtonGroup, InputGroup, Button } from 'react-bootstrap'; // functional component to add and remove options\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OptionGroup = props => {\n  const count = props.count;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    controlId: 'Option' + (count + 1),\n    children: /*#__PURE__*/_jsxDEV(InputGroup, {\n      children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n        id: 'Option' + (count + 1),\n        children: [\"Option \", count + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"col-sm-10\",\n        type: \"text\",\n        \"aria-describedby\": 'Option' + (count + 1),\n        value: props.value[count],\n        onChange: event => props.handleChangeInput(event, count)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}; // class component for create poll form\n\n\n_c = OptionGroup;\n\nconst CreatePoll = props => {\n  _s();\n\n  const [polldata, setPolldata] = useState({\n    question: \"\",\n    options: [\"\", \"\"]\n  });\n\n  const addOption = () => {\n    const values = polldata;\n\n    if (values.options.length < 10) {\n      values.options.push('');\n    }\n\n    setPolldata(values);\n  };\n\n  const removeOption = () => {\n    const values = polldata;\n\n    if (values.options.length > 2) {\n      values.options.pop();\n    }\n\n    setPolldata(values);\n  };\n\n  const handleChangeInput = (event, i) => {\n    console.log(i);\n    const values = polldata;\n    values.options[i] = event.target.value;\n    setPolldata(values);\n  };\n\n  const handleChangeQuestion = event => {\n    const values = polldata;\n    values.question = event.target.value;\n    setPolldata(values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: polldata.question,\n          onChange: e => handleChangeQuestion(e),\n          as: \"textarea\",\n          rows: 2,\n          placeholder: \"Enter Question you want to ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this), polldata.options.map((option, i) => /*#__PURE__*/_jsxDEV(OptionGroup, {\n        count: i,\n        value: polldata.options,\n        handleChangeInput: handleChangeInput\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          \"aria-label\": \"Basic example\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => addOption(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => removeOption(),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mt-3 text-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreatePoll, \"ptDSvvCR+iFeYFZTXXqp/iyQ0ic=\");\n\n_c2 = CreatePoll;\nexport default CreatePoll;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OptionGroup\");\n$RefreshReg$(_c2, \"CreatePoll\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/CreatePoll.js"],"names":["React","useState","Row","Col","Form","ButtonGroup","InputGroup","Button","OptionGroup","props","count","value","event","handleChangeInput","CreatePoll","polldata","setPolldata","question","options","addOption","values","length","push","removeOption","pop","i","console","log","target","handleChangeQuestion","e","map","option","onHide"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  ButtonGroup,\n  InputGroup,\n  Button\n} from 'react-bootstrap';\n\n// functional component to add and remove options\nconst OptionGroup = (props) => {\n  const count = props.count;\n  return (\n    <Form.Group className=\"mb-3\" controlId={'Option'+(count+1)}>\n    <InputGroup>\n      <InputGroup.Text\n        id = {'Option'+(count+1)}\n      >Option {count+1}</InputGroup.Text>\n      <Form.Control\n        className=\"col-sm-10\"\n        type=\"text\" \n        aria-describedby={'Option'+(count+1)}\n        value={props.value[count]}\n        onChange = {(event)=>(props.handleChangeInput(event, count))}\n      />\n    </InputGroup>\n    </Form.Group>\n  );\n};\n\n// class component for create poll form\nconst CreatePoll =(props) => {\n  const [polldata, setPolldata]=useState({\n    question: \"\",\n    options: [\"\", \"\"]\n  });  \n  \n  const addOption = () => {\n    const values = polldata;\n    if (values.options.length < 10){\n      values.options.push('');\n    }\n    setPolldata(values);\n  }\n\n  const removeOption = () => {\n    const values = polldata;\n    if (values.options.length > 2){\n      values.options.pop();\n    }\n    setPolldata(values);\n  }\n\n  const handleChangeInput= (event, i) => {\n    console.log(i);\n    const values = polldata;\n    values.options[i] = event.target.value;\n    setPolldata(values);\n  }\n\n  const handleChangeQuestion = (event)=>{\n    const values = polldata;\n    values.question = event.target.value;\n    setPolldata(values);\n  }\n\n  return (\n    <>\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"\">\n        <Form.Label>Question</Form.Label>\n        <Form.Control \n          value={polldata.question}\n          onChange={(e)=>handleChangeQuestion(e)}\n          as=\"textarea\" rows={2} \n          placeholder=\"Enter Question you want to ask\" />\n      </Form.Group>\n      \n      {polldata.options.map((option, i) => (\n          <OptionGroup count={i} \n          value = {polldata.options}\n          handleChangeInput={handleChangeInput}\n          />\n        )\n      )}\n\n    <Form.Group className=\"mt-3\">\n    <ButtonGroup aria-label=\"Basic example\">\n      <Button variant=\"success\"\n        onClick={()=>addOption()}\n      >Add</Button>\n      <Button variant=\"secondary\"\n        onClick={()=>removeOption()}\n      >Remove</Button>\n    </ButtonGroup>\n    </Form.Group>\n    <hr/>\n    <Form.Group className='mt-3 text-end'>\n      <Button className='m-2' onClick={props.onHide}>Close</Button>\n      <Button className='m-2' variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form.Group>\n    </Form>\n    </>\n  );\n  \n};\n\nexport default CreatePoll;\n"]},"metadata":{},"sourceType":"module"}