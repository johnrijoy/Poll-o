{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/ModalCreatePoll.js\";\nimport React, { Component } from 'react';\nimport { Form, Modal, ButtonGroup, Button } from 'react-bootstrap';\nimport CreatePoll from './CreatePoll';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OptionGroup = props => {\n  const count = props.count;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    as: \"row\",\n    className: \"mb-3\",\n    controlId: 'Option' + (count + 1),\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: [\"Option \", count + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      value: props.value[count]['option'],\n      onChange: event => props.handleChangeInput(event, count)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OptionGroup;\n\nclass ModalCreatePoll extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addOption = () => {\n      const values = this.state;\n\n      if (values.options.length < 10) {\n        values.options.push('');\n      }\n\n      this.setState(values);\n    };\n\n    this.removeOption = () => {\n      const values = this.state;\n\n      if (values.options.length > 2) {\n        values.options.pop();\n      }\n\n      this.setState(values);\n    };\n\n    this.handleChangeInput = (event, i) => {\n      const values = this.state;\n      values.options[i] = event.target.value;\n      this.setState(values);\n    };\n\n    this.handleSubmit = event => {};\n\n    this.state = {\n      countOptions: 1,\n      question: null,\n      options: ['', '']\n    };\n  } // add option\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Create Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: /*#__PURE__*/_jsxDEV(CreatePoll, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\n;\nexport default ModalCreatePoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionGroup\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/ModalCreatePoll.js"],"names":["React","Component","Form","Modal","ButtonGroup","Button","CreatePoll","OptionGroup","props","count","value","event","handleChangeInput","ModalCreatePoll","constructor","addOption","values","state","options","length","push","setState","removeOption","pop","i","target","handleSubmit","countOptions","question","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Form,\n  Modal,\n  ButtonGroup,\n  Button\n} from 'react-bootstrap';\nimport CreatePoll from'./CreatePoll';\n\nconst OptionGroup = (props) => {\n  const count = props.count;\n  return (\n    <Form.Group as=\"row\" className=\"mb-3\" controlId={'Option'+(count+1)}>\n      <Form.Label>Option {count+1}</Form.Label>\n      <Form.Control \n        type=\"text\" \n        value={props.value[count]['option']}\n        onChange = {(event)=>(props.handleChangeInput(event, count))}\n      />\n    </Form.Group>\n  );\n};\n\nclass ModalCreatePoll extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      countOptions : 1,\n      question: null,\n      options: ['', '']\n    };\n  }\n \n  // add option\n  addOption = () => {\n    const values = this.state;\n    if (values.options.length < 10){\n      values.options.push('');\n    }\n      \n    this.setState(values);\n  }\n\n  // remove option\n  removeOption = () => {\n    const values = this.state;\n    if (values.options.length > 2){\n      values.options.pop()}\n    this.setState(values)\n  }\n\n  handleChangeInput= (event, i) => {\n    const values = this.state;\n    values.options[i] = event.target.value;\n    this.setState(values);\n  }\n  \n  handleSubmit = (event)=>{\n\n  }\n\n  render() {\n    return (\n      <>\n      <Modal\n      {...this.props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Create Poll\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n      <CreatePoll />\n      </Modal.Body>\n    </Modal>\n      </>\n    );\n  }\n};\n\nexport default ModalCreatePoll;\n"]},"metadata":{},"sourceType":"module"}