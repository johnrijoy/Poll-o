{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollstatus.js\";\nimport React from 'react';\nimport { Row, Col, ProgressBar } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pollstatus = props => {\n  const options = props.poll.polloptions;\n  const votes = props.poll.pollvotes;\n  var totalvotes = 0;\n  var progress = {};\n  Object.entries(votes).map(item => {\n    totalvotes = totalvotes + item[1];\n  });\n  Object.entries(votes).map(item => {\n    progress[item[0]] = item[1] * 100 / totalvotes;\n  });\n  console.log('calcs:', totalvotes, progress);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: progress ? Object.entries(options).map(option => /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-4\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"h-4 align-self-center\",\n          children: option[1]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-8 align-self-center\",\n        children: /*#__PURE__*/_jsxDEV(ProgressBar, {\n          striped: true,\n          variant: \"success\",\n          now: progress[option[0]]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Loading\"\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_c = Pollstatus;\nexport default Pollstatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pollstatus\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollstatus.js"],"names":["React","Row","Col","ProgressBar","Pollstatus","props","options","poll","polloptions","votes","pollvotes","totalvotes","progress","Object","entries","map","item","console","log","option"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,GADF,EAEEC,GAFF,EAGEC,WAHF,QAIO,iBAJP;;;;AAMA,MAAMC,UAAU,GAAIC,KAAD,IAAS;AAC1B,QAAMC,OAAO,GAAGD,KAAK,CAACE,IAAN,CAAWC,WAA3B;AACA,QAAMC,KAAK,GAAGJ,KAAK,CAACE,IAAN,CAAWG,SAAzB;AACA,MAAIC,UAAU,GAAG,CAAjB;AACA,MAAIC,QAAQ,GAAG,EAAf;AAEAC,EAAAA,MAAM,CAACC,OAAP,CAAeL,KAAf,EAAsBM,GAAtB,CAA2BC,IAAD,IAAQ;AAChCL,IAAAA,UAAU,GAAGA,UAAU,GAAGK,IAAI,CAAC,CAAD,CAA9B;AACD,GAFD;AAGAH,EAAAA,MAAM,CAACC,OAAP,CAAeL,KAAf,EAAsBM,GAAtB,CAA2BC,IAAD,IAAQ;AAChCJ,IAAAA,QAAQ,CAACI,IAAI,CAAC,CAAD,CAAL,CAAR,GAAqBA,IAAI,CAAC,CAAD,CAAJ,GAAQ,GAAT,GAAcL,UAAlC;AACD,GAFD;AAIAM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,UAAtB,EAAkCC,QAAlC;AAEA,sBACE;AAAA,cACCA,QAAQ,GACPC,MAAM,CAACC,OAAP,CAAeR,OAAf,EAAwBS,GAAxB,CAA6BI,MAAD,iBAC1B,QAAC,GAAD;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,OAAf;AAAA,+BACE;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCA,MAAM,CAAC,CAAD;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAA,+BACE,QAAC,WAAD;AAAa,UAAA,OAAO,MAApB;AAAqB,UAAA,OAAO,EAAC,SAA7B;AAAuC,UAAA,GAAG,EAAEP,QAAQ,CAACO,MAAM,CAAC,CAAD,CAAP;AAApD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CADO,gBAYP;AAAA;AAAA;AAbF,mBADF;AAoBD,CAnCD;;KAAMf,U;AAoCN,eAAeA,UAAf","sourcesContent":["import React from 'react';\nimport {\n  Row,\n  Col,\n  ProgressBar\n} from 'react-bootstrap';\n\nconst Pollstatus = (props)=>{\n  const options = props.poll.polloptions;\n  const votes = props.poll.pollvotes;\n  var totalvotes = 0;\n  var progress = {};\n\n  Object.entries(votes).map((item)=>{\n    totalvotes = totalvotes + item[1]\n  });\n  Object.entries(votes).map((item)=>{\n    progress[item[0]] = (item[1]*100)/totalvotes\n  });\n\n  console.log('calcs:', totalvotes, progress);\n\n  return (\n    <>\n    {progress ? (\n      Object.entries(options).map((option)=>(\n        <Row>\n          <Col className=\"col-4\">\n            <p className=\"h-4 align-self-center\">{option[1]}</p>\n          </Col>\n          <Col className=\"col-8 align-self-center\">\n            <ProgressBar striped variant=\"success\" now={progress[option[0]]} />\n          </Col>\n        </Row>\n      ))\n    ):(\n      <>\n      Loading\n      </>\n    )} \n    </>\n  )\n}\nexport default Pollstatus;\n"]},"metadata":{},"sourceType":"module"}