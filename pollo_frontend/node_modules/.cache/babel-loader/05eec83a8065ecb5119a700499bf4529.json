{"ast":null,"code":"import axios from 'axios';\n\nconst getState = ({\n  getStore,\n  getActions,\n  setStore\n}) => {\n  return {\n    store: {\n      message: null,\n      token: null,\n      test: 'store working'\n    },\n    actions: {\n      getTest: () => {\n        console.log('actions working');\n      },\n      login: async (email, password) => {\n        console.log('logging in');\n        const opts = {\n          method: \"POST\",\n          headers: {\n            \"Accepts\": \"application/json\"\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        };\n\n        try {\n          const resp = await axios(process.env.REACT_APP_API_SERVER + \"api/auth/create-token\", opts);\n\n          if (resp.status !== 200) {\n            console.log(\"Error 1\");\n            return false;\n          }\n\n          const data = await resp.json();\n          console.log(\"Backend data:\", data);\n          sessionStorage.setItem(\"token\", data.access_token);\n          setStore({\n            \"token\": data.access_token\n          });\n          return true;\n        } catch (error) {\n          console.log(\"Error 2\");\n          return false;\n        }\n      }\n    }\n  };\n};\n\nexport default getState;","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/context/contextData.js"],"names":["axios","getState","getStore","getActions","setStore","store","message","token","test","actions","getTest","console","log","login","email","password","opts","method","headers","body","JSON","stringify","resp","process","env","REACT_APP_API_SERVER","status","data","json","sessionStorage","setItem","access_token","error"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,UAAZ;AAAwBC,EAAAA;AAAxB,CAAD,KAAwC;AACvD,SAAO;AACLC,IAAAA,KAAK,EAAC;AACJC,MAAAA,OAAO,EAAE,IADL;AAEJC,MAAAA,KAAK,EAAE,IAFH;AAGJC,MAAAA,IAAI,EAAE;AAHF,KADD;AAMLC,IAAAA,OAAO,EAAC;AAENC,MAAAA,OAAO,EAAE,MAAI;AACXC,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,OAJK;AAMNC,MAAAA,KAAK,EAAE,OAAOC,KAAP,EAAcC,QAAd,KAAyB;AAC9BJ,QAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEA,cAAMI,IAAI,GAAC;AACTC,UAAAA,MAAM,EAAE,MADC;AAETC,UAAAA,OAAO,EAAE;AACP,uBAAU;AADH,WAFA;AAKTC,UAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBP,YAAAA,KAAK,EAAEA,KADY;AAEnBC,YAAAA,QAAQ,EAAEA;AAFS,WAAf;AALG,SAAX;;AAWA,YAAG;AACD,gBAAMO,IAAI,GAAG,MAAMtB,KAAK,CAACuB,OAAO,CAACC,GAAR,CAAYC,oBAAZ,GAAiC,uBAAlC,EAA2DT,IAA3D,CAAxB;;AACA,cAAIM,IAAI,CAACI,MAAL,KAAgB,GAApB,EAAwB;AACtBf,YAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,mBAAO,KAAP;AACD;;AAED,gBAAMe,IAAI,GAAG,MAAML,IAAI,CAACM,IAAL,EAAnB;AACAjB,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6Be,IAA7B;AACAE,UAAAA,cAAc,CAACC,OAAf,CAAuB,OAAvB,EAAgCH,IAAI,CAACI,YAArC;AACA3B,UAAAA,QAAQ,CAAC;AAAE,qBAASuB,IAAI,CAACI;AAAhB,WAAD,CAAR;AACA,iBAAO,IAAP;AACD,SAZD,CAaA,OAAMC,KAAN,EAAY;AACVrB,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACA,iBAAO,KAAP;AACD;AACF;AArCK;AANH,GAAP;AA+CD,CAhDD;;AAkDA,eAAeX,QAAf","sourcesContent":["import axios from 'axios';\n\nconst getState = ({ getStore, getActions, setStore }) => {\n  return {\n    store:{\n      message: null,\n      token: null,\n      test: 'store working'\n    },\n    actions:{\n\n      getTest: ()=>{\n        console.log('actions working')\n      },\n\n      login: async (email, password)=>{\n        console.log('logging in');\n\n        const opts={\n          method: \"POST\",\n          headers: {\n            \"Accepts\":\"application/json\"\n          },\n          body: JSON.stringify({\n            email: email,\n            password: password\n          })\n        };\n\n        try{\n          const resp = await axios(process.env.REACT_APP_API_SERVER+\"api/auth/create-token\", opts)\n          if (resp.status !== 200){\n            console.log(\"Error 1\");\n            return false;\n          }\n\n          const data = await resp.json();\n          console.log(\"Backend data:\", data);\n          sessionStorage.setItem(\"token\", data.access_token);\n          setStore({ \"token\": data.access_token });\n          return true;\n        }\n        catch(error){\n          console.log(\"Error 2\");\n          return false;\n        }\n      }\n      \n    }\n  };\n};\n\nexport default getState;\n"]},"metadata":{},"sourceType":"module"}