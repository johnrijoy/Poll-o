{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/CreatePoll.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Row, Col, Form, ButtonGroup, InputGroup, Button } from 'react-bootstrap'; // functional component to add and remove options\n// class component for create poll form\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CreatePoll = props => {\n  _s();\n\n  const [polldata, setPolldata] = useState({\n    question: \"\",\n    options: [\"\", \"\"]\n  });\n\n  const addOption = () => {\n    const values = options;\n\n    if (values.length < 10) {\n      values.push('');\n    }\n\n    setOptions(values);\n    console.log(options);\n  };\n\n  const removeOption = () => {\n    const values = options;\n\n    if (values.length > 2) {\n      values.pop();\n    }\n\n    setOptions(values);\n  };\n\n  const handleChangeInput = (event, i) => {\n    console.log(i);\n    const values = options;\n    values[i] = event.target.value;\n    setOptions(values);\n  };\n\n  const OptionGroup = props => {\n    const count = props.count;\n    return /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: 'Option' + (count + 1),\n      children: /*#__PURE__*/_jsxDEV(InputGroup, {\n        children: [/*#__PURE__*/_jsxDEV(InputGroup.Text, {\n          id: 'Option' + (count + 1),\n          children: [\"Option \", count + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"col-sm-10\",\n          type: \"text\",\n          \"aria-describedby\": 'Option' + (count + 1),\n          value: options[count],\n          onChange: event => handleChangeInput(event, count)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mb-3\",\n        controlId: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          value: question,\n          onChange: e => setQuestion(e.target.value),\n          as: \"textarea\",\n          rows: 2,\n          placeholder: \"Enter Question you want to ask\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), options.map((option, i) => /*#__PURE__*/_jsxDEV(OptionGroup, {\n        count: i\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mt-3\",\n        children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n          \"aria-label\": \"Basic example\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: () => addOption(),\n            children: \"Add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"secondary\",\n            onClick: () => removeOption(),\n            children: \"Remove\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        className: \"mt-3 text-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          onClick: props.onHide,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"m-2\",\n          variant: \"primary\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(CreatePoll, \"jnSkX3fHIloOaSCukm4lAfHIoAY=\");\n\n_c = CreatePoll;\nexport default CreatePoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreatePoll\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/CreatePoll.js"],"names":["React","useState","Row","Col","Form","ButtonGroup","InputGroup","Button","CreatePoll","props","polldata","setPolldata","question","options","addOption","values","length","push","setOptions","console","log","removeOption","pop","handleChangeInput","event","i","target","value","OptionGroup","count","e","setQuestion","map","option","onHide"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  ButtonGroup,\n  InputGroup,\n  Button\n} from 'react-bootstrap';\n\n// functional component to add and remove options\n// class component for create poll form\nconst CreatePoll = (props) => {\n  const [polldata, setPolldata] = useState({\n    question:\"\",\n    options:[\"\",\"\"]\n  })  \n\n  const addOption = () => {\n      const values = options;\n      if (values.length < 10){\n        values.push('');\n      }\n      setOptions(values);\n    console.log(options)\n    }\n\n    const removeOption = () => {\n      const values = options;\n      if (values.length > 2){\n        values.pop();\n      }\n      setOptions(values);\n    }\n\n    const handleChangeInput= (event, i) => {\n      console.log(i);\n      const values = options;\n      values[i] = event.target.value;\n      setOptions(values);\n    }\n\n  const OptionGroup = (props) => {\n    const count = props.count;\n    return (\n      <Form.Group className=\"mb-3\" controlId={'Option'+(count+1)}>\n      <InputGroup>\n        <InputGroup.Text\n          id = {'Option'+(count+1)}\n        >Option {count+1}</InputGroup.Text>\n        <Form.Control\n          className=\"col-sm-10\"\n          type=\"text\" \n          aria-describedby={'Option'+(count+1)}\n          value={options[count]}\n          onChange = {(event)=>(handleChangeInput(event, count))}\n        />\n      </InputGroup>\n      </Form.Group>\n    );\n  };\n\n\n  return (\n    <>\n    <Form>\n      <Form.Group className=\"mb-3\" controlId=\"\">\n        <Form.Label>Question</Form.Label>\n        <Form.Control \n          value={question}\n          onChange={(e)=>setQuestion(e.target.value)}\n          as=\"textarea\" rows={2} \n          placeholder=\"Enter Question you want to ask\" />\n      </Form.Group>\n      \n      {options.map((option, i) => (\n          <OptionGroup count={i} \n          />\n        )\n      )}\n\n    <Form.Group className=\"mt-3\">\n    <ButtonGroup aria-label=\"Basic example\">\n      <Button variant=\"success\"\n        onClick={()=>addOption()}\n      >Add</Button>\n      <Button variant=\"secondary\"\n        onClick={()=>removeOption()}\n      >Remove</Button>\n    </ButtonGroup>\n    </Form.Group>\n    <hr/>\n    <Form.Group className='mt-3 text-end'>\n      <Button className='m-2' onClick={props.onHide}>Close</Button>\n      <Button className='m-2' variant=\"primary\" type=\"submit\">\n        Submit\n      </Button>\n    </Form.Group>\n    </Form>\n    </>\n  );\n  \n};\n\nexport default CreatePoll;\n"]},"metadata":{},"sourceType":"module"}