{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/CreatePoll.js\";\nimport React, { Component } from 'react';\nimport { Row, Col, Form, ButtonGroup, InputGroup, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OptionGroup = props => {\n  const count = props.count;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    className: \"mb-3\",\n    controlId: 'Option' + (count + 1),\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        className: \"col-sm-2\",\n        children: /*#__PURE__*/_jsxDEV(Form.Label, {\n          className: \"col-sm-2\",\n          children: [\"Option \", count + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Form.Control, {\n          className: \"col-sm-10\",\n          type: \"text\",\n          value: props.value[count]['option'],\n          onChange: event => props.handleChangeInput(event, count)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OptionGroup;\n\nclass CreatePoll extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addOption = () => {\n      const values = this.state;\n\n      if (values.options.length < 10) {\n        values.options.push('');\n      }\n\n      this.setState(values);\n    };\n\n    this.removeOption = () => {\n      const values = this.state;\n\n      if (values.options.length > 2) {\n        values.options.pop();\n      }\n\n      this.setState(values);\n    };\n\n    this.handleChangeInput = (event, i) => {\n      const values = this.state;\n      values.options[i]['option'] = event.target.value;\n      this.setState(values);\n    };\n\n    this.state = {\n      countOptions: 1,\n      question: null,\n      options: ['', '']\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Enter email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), this.state.options.map((option, i) => /*#__PURE__*/_jsxDEV(OptionGroup, {\n          count: i,\n          value: this.state.options,\n          handleChangeInput: this.handleChangeInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mt-3\",\n          children: /*#__PURE__*/_jsxDEV(ButtonGroup, {\n            \"aria-label\": \"Basic example\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"success\",\n              onClick: () => this.addOption(),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"secondary\",\n              onClick: () => this.removeOption(),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mt-3 text-end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            className: \"m-2\",\n            onClick: this.props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"m-2\",\n            variant: \"primary\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\n;\nexport default CreatePoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionGroup\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/CreatePoll.js"],"names":["React","Component","Row","Col","Form","ButtonGroup","InputGroup","Button","OptionGroup","props","count","value","event","handleChangeInput","CreatePoll","constructor","addOption","values","state","options","length","push","setState","removeOption","pop","i","target","countOptions","question","render","map","option","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Row,\n  Col,\n  Form,\n  ButtonGroup,\n  InputGroup,\n  Button\n} from 'react-bootstrap';\n\nconst OptionGroup = (props) => {\n  const count = props.count;\n  return (\n    <Form.Group className=\"mb-3\" controlId={'Option'+(count+1)}>\n    <Row>\n      <Col className='col-sm-2'>\n      <Form.Label className=\"col-sm-2\" >Option {count+1}</Form.Label>\n      </Col>\n      <Col>\n      <Form.Control\n        className=\"col-sm-10\"\n        type=\"text\" \n        value={props.value[count]['option']}\n        onChange = {(event)=>(props.handleChangeInput(event, count))}\n      />\n      </Col>\n    </Row>\n    </Form.Group>\n  );\n};\n\nclass CreatePoll extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      countOptions : 1,\n      question: null,\n      options: ['', '']\n    };\n  }\n  \n  addOption = () => {\n    const values = this.state;\n    if (values.options.length < 10){\n      values.options.push('');\n    }\n    this.setState(values)\n  }\n\n  removeOption = () => {\n    const values = this.state;\n    if (values.options.length > 2){\n      values.options.pop();\n    }\n    this.setState(values)\n  }\n\n  handleChangeInput= (event, i) => {\n    const values = this.state;\n    values.options[i]['option'] = event.target.value;\n    this.setState(values);\n  }\n\n  render() {\n    return (\n      <>\n      <Form>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n        </Form.Group>\n        \n        {this.state.options.map((option, i) => (\n            <OptionGroup count={i} \n            value = {this.state.options}\n            handleChangeInput={this.handleChangeInput}\n            />\n          )\n        )}\n\n      <Form.Group className=\"mt-3\">\n      <ButtonGroup aria-label=\"Basic example\">\n        <Button variant=\"success\"\n          onClick={()=>(this.addOption())}\n        >Add</Button>\n        <Button variant=\"secondary\"\n          onClick={()=>(this.removeOption())}\n        >Remove</Button>\n      </ButtonGroup>\n      </Form.Group>\n      <hr/>\n      <Form.Group className='mt-3 text-end'>\n        <Button className='m-2' onClick={this.props.onHide}>Close</Button>\n        <Button className='m-2' variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Form.Group>\n      </Form>\n      </>\n    );\n  }\n};\n\nexport default CreatePoll;\n"]},"metadata":{},"sourceType":"module"}