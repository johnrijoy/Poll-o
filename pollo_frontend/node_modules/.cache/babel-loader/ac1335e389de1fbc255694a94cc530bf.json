{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/AllPolls.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { Pollcard } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log(process.env);\n\nclass AllPolls extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      polls: null,\n      loading: true\n    };\n    axios.get(process.env.REACT_APP_API_SERVER + \"/polls/viewpoll\", {\n      headers: {\n        'Accepts': 'aplication/json'\n      }\n    }).then(resp => {\n      console.log(resp.data);\n      this.setState({\n        polls: resp.data,\n        loading: false\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    const polls = this.state.polls;\n    console.log('Hello');\n    console.log(polls);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [polls ? polls.polls.map(poll => /*#__PURE__*/_jsxDEV(Pollcard, {\n        polldata: poll\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"All polls will be displayed here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"secondary\",\n        onClick: this.props.handleClick,\n        children: \"Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default AllPolls;","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/AllPolls.js"],"names":["React","Component","axios","Button","Pollcard","console","log","process","env","AllPolls","constructor","props","state","polls","loading","get","REACT_APP_API_SERVER","headers","then","resp","data","setState","catch","error","render","map","poll","handleClick"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,iBAAvB;AACA,SAASC,QAAT,QAAyB,eAAzB;;;AAEAC,OAAO,CAACC,GAAR,CAAYC,OAAO,CAACC,GAApB;;AAEA,MAAMC,QAAN,SAAuBR,SAAvB,CAAiC;AAC/BS,EAAAA,WAAW,CAAEC,KAAF,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAG,IADG;AAEXC,MAAAA,OAAO,EAAE;AAFE,KAAb;AAIAZ,IAAAA,KAAK,CAACa,GAAN,CAAUR,OAAO,CAACC,GAAR,CAAYQ,oBAAZ,GAAmC,iBAA7C,EACE;AAACC,MAAAA,OAAO,EAAE;AAAC,mBAAW;AAAZ;AAAV,KADF,EAEEC,IAFF,CAEQC,IAAD,IAAQ;AACXd,MAAAA,OAAO,CAACC,GAAR,CAAYa,IAAI,CAACC,IAAjB;AACA,WAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAGM,IAAI,CAACC,IAAf;AAAqBN,QAAAA,OAAO,EAAE;AAA9B,OAAd;AACD,KALH,EAMEQ,KANF,CAMSC,KAAD,IAAU;AACdlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,KAAZ;AACD,KARH;AAUD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMX,KAAK,GAAG,KAAKD,KAAL,CAAWC,KAAzB;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYO,KAAZ;AAEA,wBACE;AAAA,iBAEEA,KAAD,GACCA,KAAK,CAACA,KAAN,CAAYY,GAAZ,CAAiBC,IAAD,iBACd,QAAC,QAAD;AAAU,QAAA,QAAQ,EAAEA;AAApB;AAAA;AAAA;AAAA;AAAA,cADF,CADD,gBAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF,eAWA,QAAC,MAAD;AACC,QAAA,OAAO,EAAG,WADX;AAEC,QAAA,OAAO,EAAI,KAAKf,KAAL,CAAWgB,WAFvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAXA;AAAA,oBADF;AAoBD;;AA5C8B;;AA+CjC,eAAelB,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nimport { Pollcard } from '../components';\n\nconsole.log(process.env);\n\nclass AllPolls extends Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      polls : null,\n      loading: true\n    };\n    axios.get(process.env.REACT_APP_API_SERVER + \"/polls/viewpoll\",\n      {headers: {'Accepts': 'aplication/json'}}\n    ).then((resp)=>{\n        console.log(resp.data);\n        this.setState({ polls : resp.data, loading: false });\n      }\n    ).catch((error) =>{\n        console.log(error);\n      }\n    );\n  }\n\n  render() {\n    const polls = this.state.polls;\n    console.log('Hello')\n    console.log(polls);\n\n    return (\n      <>\n\n      {(polls) ? (\n        polls.polls.map((poll)=>(\n          <Pollcard polldata={poll}/>\n          )\n        )\n      ) : (\n        <p>All polls will be displayed here</p>\n      )}\n\n      <Button\n       variant = 'secondary'\n       onClick = {this.props.handleClick}\n      >\n        Back\n      </Button>\n      </>\n    )\n  }\n}\n\nexport default AllPolls;\n"]},"metadata":{},"sourceType":"module"}