{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/ModalCreatePoll.js\";\nimport React, { Component } from 'react';\nimport { Form, Modal, Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OptionGroup = props => {\n  const count = props.count;\n  return /*#__PURE__*/_jsxDEV(Form.Group, {\n    as: \"row\",\n    controlId: 'Option' + (count + 1),\n    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n      children: [\"Option \", count + 1]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"text\",\n      value: this.state.options[count],\n      onChange: event => props.handleChangeInput(event, count)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\n_c = OptionGroup;\n\nclass ModalCreatePoll extends Component {\n  constructor(props) {\n    super(props);\n\n    this.addOption = () => {\n      const values = this.state;\n      values.options.push({\n        option: ''\n      });\n      this.setState(values);\n    };\n\n    this.removeOption = () => {\n      const values = this.state;\n      values.options.pop();\n      this.setState(values);\n    };\n\n    this.handleChangeInput = (event, i) => {\n      const values = this.state;\n      values.options[i]['option'] = event.target.value;\n      this.setState(values);\n    };\n\n    this.state = {\n      countOptions: 1,\n      question: null,\n      options: [{\n        option: ''\n      }]\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Modal, { ...this.props,\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Create Poll\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Modal.Body, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicEmail\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 9\n            }, this), this.state.options.map((option, i) => /*#__PURE__*/_jsxDEV(OptionGroup, {\n              count: i,\n              handleChangeInput: this.handleChangeInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 13\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: props.onHide,\n              children: \"Close\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\n;\nexport default ModalCreatePoll;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionGroup\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/ModalCreatePoll.js"],"names":["React","Component","Form","Modal","Button","OptionGroup","props","count","state","options","event","handleChangeInput","ModalCreatePoll","constructor","addOption","values","push","option","setState","removeOption","pop","i","target","value","countOptions","question","render","map","onHide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Form,\n  Modal,\n  Button\n} from 'react-bootstrap';\n\nconst OptionGroup = (props) => {\n  const count = props.count;\n  return (\n    <Form.Group as=\"row\" controlId={'Option'+(count+1)}>\n      <Form.Label>Option {count+1}</Form.Label>\n      <Form.Control \n        type=\"text\" \n        value={this.state.options[count]}\n        onChange = {(event)=>(props.handleChangeInput(event, count))}\n      />\n    </Form.Group>\n  );\n};\n\nclass ModalCreatePoll extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      countOptions : 1,\n      question: null,\n      options: [{option: ''},]\n    };\n  }\n  \n  addOption = () => {\n    const values = this.state;\n    values.options.push({option: ''});\n    this.setState(values)\n  }\n\n  removeOption = () => {\n    const values = this.state;\n    values.options.pop();\n    this.setState(values)\n  }\n\n  handleChangeInput= (event, i) => {\n    const values = this.state;\n    values.options[i]['option'] = event.target.value;\n    this.setState(values);\n  }\n\n  render() {\n    return (\n      <>\n      <Modal\n      {...this.props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header closeButton>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Create Poll\n        </Modal.Title>\n      </Modal.Header>\n      <Form>\n      <Modal.Body>\n\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n          <Form.Label>Email address</Form.Label>\n          <Form.Control type=\"email\" placeholder=\"Enter email\" />\n        </Form.Group>\n        \n        {this.state.options.map((option, i) => (\n            <OptionGroup count={i} handleChangeInput={this.handleChangeInput}/>\n          )\n        )}\n\n      </Modal.Body>\n      <Modal.Footer>\n        <Button onClick={props.onHide}>Close</Button>\n        <Button variant=\"primary\" type=\"submit\">\n          Submit\n        </Button>\n      </Modal.Footer>\n      </Form>\n    </Modal>\n      </>\n    );\n  }\n};\n\nexport default ModalCreatePoll;\n"]},"metadata":{},"sourceType":"module"}