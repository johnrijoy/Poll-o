{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/pages/Pollpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from \"react\";\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\nimport { Layout } from '../layout/Layout';\nimport { Context } from '../context/appContext';\nimport { AllPolls, WelcomeMessage } from '../components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pollpage = () => {\n  _s();\n\n  const {\n    poll_id\n  } = useParams();\n  const [loading, setLoading] = useState(true);\n  const [poll, setPoll] = useState(null);\n  const token = useContext(Context).store.token;\n  console.log('poll id received:', poll_id);\n  const opts = {\n    method: \"GET\",\n    headers: {\n      \"Accept\": \"application/json\",\n      \"Authorization\": \"Bearer \" + token\n    },\n    params: {\n      \"poll_id\": poll_id\n    }\n  };\n\n  if (poll === null) {\n    axios.get(process.env.REACT_APP_API_SERVER + \"/api/polls/getpoll\", opts).then(resp => {\n      if (resp.status == 200) {\n        setPoll(resp.data);\n        setLoading(false);\n      }\n    });\n  }\n\n  console.log(poll);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    heading: \"Poll'O\",\n    children: loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Pollform, {\n      poll: poll\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Pollpage, \"aDpizXxS41eUq8B1UU6ez2WnThc=\", false, function () {\n  return [useParams];\n});\n\n_c = Pollpage;\nexport default Pollpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pollpage\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/pages/Pollpage.js"],"names":["React","useState","useContext","axios","useParams","Layout","Context","AllPolls","WelcomeMessage","Pollpage","poll_id","loading","setLoading","poll","setPoll","token","store","console","log","opts","method","headers","params","get","process","env","REACT_APP_API_SERVER","then","resp","status","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AAEA,SAASC,MAAT,QAAuB,kBAAvB;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,SACEC,QADF,EAEEC,cAFF,QAGO,eAHP;;;;AAKA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAM;AAAEC,IAAAA;AAAF,MAAcN,SAAS,EAA7B;AACA,QAAM,CAAEO,OAAF,EAAWC,UAAX,IAA0BX,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAAEY,IAAF,EAAQC,OAAR,IAAoBb,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAMc,KAAK,GAAGb,UAAU,CAACI,OAAD,CAAV,CAAoBU,KAApB,CAA0BD,KAAxC;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCR,OAAhC;AAEA,QAAMS,IAAI,GAAG;AACTC,IAAAA,MAAM,EAAE,KADC;AAETC,IAAAA,OAAO,EAAE;AACP,gBAAS,kBADF;AAEP,uBAAiB,YAAWN;AAFrB,KAFA;AAMTO,IAAAA,MAAM,EAAE;AAAC,iBAAUZ;AAAX;AANC,GAAb;;AAQA,MAAIG,IAAI,KAAK,IAAb,EAAmB;AACnBV,IAAAA,KAAK,CAACoB,GAAN,CAAUC,OAAO,CAACC,GAAR,CAAYC,oBAAZ,GAAiC,oBAA3C,EAAiEP,IAAjE,EACGQ,IADH,CACSC,IAAD,IAAQ;AACZ,UAAIA,IAAI,CAACC,MAAL,IAAe,GAAnB,EAAuB;AACvBf,QAAAA,OAAO,CAACc,IAAI,CAACE,IAAN,CAAP;AACAlB,QAAAA,UAAU,CAAC,KAAD,CAAV;AACC;AACF,KANH;AAOC;;AACDK,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AAEA,sBACE,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,QAAhB;AAAA,cACCF,OAAO,gBACJ;AAAA,6BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA,qBADI,gBAKJ,QAAC,QAAD;AAAU,MAAA,IAAI,EAAIE;AAAlB;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAvCD;;GAAMJ,Q;UACgBL,S;;;KADhBK,Q;AAyCN,eAAeA,QAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport axios from 'axios';\nimport { useParams } from 'react-router-dom';\n\nimport { Layout } from '../layout/Layout';\nimport { Context } from '../context/appContext';\nimport { \n  AllPolls,\n  WelcomeMessage\n} from '../components';\n\nconst Pollpage = () => {\n  const { poll_id } = useParams();\n  const [ loading, setLoading ] = useState(true);\n  const [ poll, setPoll ] = useState(null);\n  const token = useContext(Context).store.token;\n\n  console.log('poll id received:',poll_id);\n  \n  const opts = {\n      method: \"GET\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Authorization\": \"Bearer \"+ token\n      },\n      params: {\"poll_id\":poll_id}\n  }\n  if (poll === null) {\n  axios.get(process.env.REACT_APP_API_SERVER+\"/api/polls/getpoll\", opts)\n    .then((resp)=>{\n      if (resp.status == 200){\n      setPoll(resp.data);\n      setLoading(false);\n      }\n    });\n  }\n  console.log(poll);\n\n  return (\n    <Layout heading=\"Poll'O\">\n    {loading ? (\n        <>\n        <p>Loading</p>\n        </>\n      ):(\n        <Pollform poll = {poll} />\n      )\n    }\n    </Layout>\n  );\n};\n\nexport default Pollpage;\n"]},"metadata":{},"sourceType":"module"}