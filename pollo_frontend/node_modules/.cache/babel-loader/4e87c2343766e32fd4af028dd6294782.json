{"ast":null,"code":"var _jsxFileName = \"/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollcard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { Col, Card, Collapse, ListGroup, Button } from 'react-bootstrap';\nimport { Context } from \"../context/appContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Pollcard = props => {\n  _s();\n\n  const poll = props.polldata;\n  const [polldata, setPolldata] = useState(false);\n  const [open, setOpen] = useState(false);\n  const token = useContext(Context).store.token;\n\n  const handleCheckout = pollid => {\n    const data = {\n      \"poll_id\": pollid\n    };\n    const opts = {\n      method: \"GET\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\",\n        \"Authorization\": \"Bearer \" + token\n      },\n      params: {\n        \"poll_id\": pollid\n      }\n    };\n    axios.get(process.env.REACT_APP_API_SERVER + \"/api/polls/getpoll\", opts).then(resp => {\n      console.log('response data', resp.data);\n      const data = resp.data;\n      setPolldata(data);\n      console.log('poll data:', polldata);\n      setOpen(!open);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        border: \"primary\",\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          onClick: () => handleCheckout(poll.id),\n          \"aria-controls\": \"example-collapse-text\",\n          \"aria-expanded\": open,\n          children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n            children: poll.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: open,\n            children: /*#__PURE__*/_jsxDEV(Card.Text, {\n              id: \"example-collapse-text\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: polldata ? Object.entries(polldata.polloptions).map((key, i) => {\n                  return /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                    id: key[0],\n                    children: key[1]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 19\n                  }, this);\n                }) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"Loading\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 11\n              }, this), useContext(Context).store.isAuthenticated && /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                onClick: () => console.log('hello'),\n                children: \"Check out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          className: \"text-muted text-end\",\n          children: \"Poll created on\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n\n_s(Pollcard, \"Mz3tYPId7FNl/4I8eDeueqzBdSA=\");\n\n_c = Pollcard;\nexport default Pollcard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pollcard\");","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollcard.js"],"names":["React","useState","useContext","axios","useHistory","Col","Card","Collapse","ListGroup","Button","Context","Pollcard","props","poll","polldata","setPolldata","open","setOpen","token","store","handleCheckout","pollid","data","opts","method","headers","params","get","process","env","REACT_APP_API_SERVER","then","resp","console","log","catch","error","id","question","Object","entries","polloptions","map","key","i","isAuthenticated"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport { Col,Card,Collapse,ListGroup,Button } from 'react-bootstrap';\nimport { Context } from \"../context/appContext\";\n\nconst Pollcard = (props) => {\n  const poll = props.polldata;\n  const [polldata, setPolldata] = useState(false);\n  const [open, setOpen] = useState(false);\n  const token = useContext(Context).store.token\n\n  const handleCheckout = (pollid) =>{\n    const data = {\n      \"poll_id\":pollid\n    }\n    const opts={\n      method: \"GET\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Content-Type\":\"application/json\",\n        \"Authorization\": \"Bearer \"+ token\n      },\n      params: {\"poll_id\":pollid}\n    };\n\n    axios.get(process.env.REACT_APP_API_SERVER + \"/api/polls/getpoll\",\n      opts\n    ).then((resp)=>{\n        console.log('response data',resp.data);\n        const data = resp.data;\n        setPolldata(data);\n        console.log('poll data:',polldata);\n        setOpen(!open);\n      }\n    ).catch((error) =>{\n        console.log(error);\n      }\n    );\n  }\n\n  return (\n    <>\n    <Col>\n    <Card border=\"primary\" className=\"mb-3\" >\n      <Card.Body\n        onClick={()=>handleCheckout(poll.id)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        <Card.Title>{poll.question}</Card.Title>\n\n      <Collapse in={open}>\n        <Card.Text id=\"example-collapse-text\">\n          <ListGroup variant=\"flush\">\n            { (polldata)?\n              (Object.entries(polldata.polloptions).map((key, i)=>{\n                return(\n                  <ListGroup.Item id={key[0]}>\n                   {key[1]} \n                  </ListGroup.Item>\n                );\n            })):(\n              <p>Loading</p>\n            )}\n          </ListGroup>\n          { useContext(Context).store.isAuthenticated &&\n          <Button\n           variant = 'primary'\n           onClick={()=>console.log('hello')}\n          >Check out</Button>\n          }\n        </Card.Text>  \n      </Collapse>\n\n      </Card.Body>\n      <Card.Footer className=\"text-muted text-end\">Poll created on</Card.Footer>\n    </Card>\n    </Col>\n    </>\n  );\n};\n\nexport default Pollcard;\n"]},"metadata":{},"sourceType":"module"}