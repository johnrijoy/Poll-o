{"ast":null,"code":"import _slicedToArray from\"/home/johnrijoy/projects/polling-webapp/pollo_frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useContext}from'react';import axios from'axios';import{useHistory}from'react-router-dom';import{Col,Card,Collapse,ListGroup,Button}from'react-bootstrap';import{Context}from\"../context/appContext\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Pollcard=function Pollcard(props){var poll=props.polldata;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),polldata=_useState2[0],setPolldata=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),open=_useState4[0],setOpen=_useState4[1];var token=useContext(Context).store.token;var history=useHistory();var handleCheckout=function handleCheckout(pollid){var opts={method:\"GET\",headers:{\"Accept\":\"application/json\",\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \"+token},params:{\"poll_id\":pollid}};axios.get(process.env.REACT_APP_API_SERVER+\"/api/polls/getpoll\",opts).then(function(resp){console.log('response data',resp.data);var data=resp.data;setPolldata(data);console.log('poll data:',polldata);setOpen(!open);}).catch(function(error){console.log(error.response.status);if(error.response.status===422||error.response.status===401)history.push('/login');});};return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(Card,{border:\"primary\",className:\"mb-3\",children:[/*#__PURE__*/_jsxs(Card.Body,{onClick:function onClick(){return handleCheckout(poll.id);},\"aria-controls\":\"example-collapse-text\",\"aria-expanded\":open,children:[/*#__PURE__*/_jsx(Card.Title,{children:poll.question}),/*#__PURE__*/_jsx(Collapse,{in:open,children:/*#__PURE__*/_jsxs(Card.Text,{id:\"example-collapse-text\",children:[/*#__PURE__*/_jsx(ListGroup,{variant:\"flush\",children:polldata?Object.entries(polldata.polloptions).map(function(key,i){return/*#__PURE__*/_jsx(ListGroup.Item,{id:key[0],children:key[1]});}):/*#__PURE__*/_jsx(\"p\",{children:\"Loading\"})}),useContext(Context).store.isAuthenticated&&/*#__PURE__*/_jsx(Button,{variant:\"primary\",onClick:function onClick(){return history.push('/poll/'+polldata.polldata.poll_id);},children:\"Check out\"})]})})]}),/*#__PURE__*/_jsx(Card.Footer,{className:\"text-muted text-end\",children:\"Poll created on\"})]})})});};export default Pollcard;","map":{"version":3,"sources":["/home/johnrijoy/projects/polling-webapp/pollo_frontend/src/components/Pollcard.js"],"names":["React","useState","useContext","axios","useHistory","Col","Card","Collapse","ListGroup","Button","Context","Pollcard","props","poll","polldata","setPolldata","open","setOpen","token","store","history","handleCheckout","pollid","opts","method","headers","params","get","process","env","REACT_APP_API_SERVER","then","resp","console","log","data","catch","error","response","status","push","id","question","Object","entries","polloptions","map","key","i","isAuthenticated","poll_id"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\n\nimport { Col,Card,Collapse,ListGroup,Button } from 'react-bootstrap';\nimport { Context } from \"../context/appContext\";\n\nconst Pollcard = (props) => {\n  const poll = props.polldata;\n  const [polldata, setPolldata] = useState(false);\n  const [open, setOpen] = useState(false);\n  const token = useContext(Context).store.token;\n  const history = useHistory();\n\n  const handleCheckout = (pollid) =>{\n    const opts={\n      method: \"GET\",\n      headers: {\n        \"Accept\":\"application/json\",\n        \"Content-Type\":\"application/json\",\n        \"Authorization\": \"Bearer \"+ token\n      },\n      params: {\"poll_id\":pollid}\n    };\n\n    axios.get(process.env.REACT_APP_API_SERVER + \"/api/polls/getpoll\",\n      opts\n    ).then((resp)=>{\n        console.log('response data',resp.data);\n        const data = resp.data;\n        setPolldata(data);\n        console.log('poll data:',polldata);\n        setOpen(!open);\n      }\n    ).catch((error) =>{\n        console.log(error.response.status);\n        if (error.response.status === 422 || error.response.status === 401 )\n          history.push('/login');\n      }\n    );\n  }\n\n  return (\n    <>\n    <Col>\n    <Card border=\"primary\" className=\"mb-3\" >\n      <Card.Body\n        onClick={()=>handleCheckout(poll.id)}\n        aria-controls=\"example-collapse-text\"\n        aria-expanded={open}\n      >\n        <Card.Title>{poll.question}</Card.Title>\n\n      <Collapse in={open}>\n        <Card.Text id=\"example-collapse-text\">\n          <ListGroup variant=\"flush\">\n            { (polldata)?\n              (Object.entries(polldata.polloptions).map((key, i)=>{\n                return(\n                  <ListGroup.Item id={key[0]}>\n                   {key[1]} \n                  </ListGroup.Item>\n                );\n            })):(\n              <p>Loading</p>\n            )}\n          </ListGroup>\n          { useContext(Context).store.isAuthenticated &&\n          <Button\n           variant = 'primary'\n           onClick={()=>history.push('/poll/'+polldata.polldata.poll_id)}\n          >Check out</Button>\n          }\n        </Card.Text>  \n      </Collapse>\n\n      </Card.Body>\n      <Card.Footer className=\"text-muted text-end\">Poll created on</Card.Footer>\n    </Card>\n    </Col>\n    </>\n  );\n};\n\nexport default Pollcard;\n"]},"metadata":{},"sourceType":"module"}